- id ||= nil
- type ||= (defined?(upload_type)) ? (upload_type) : (nil)
- action ||= url_for(action: 'upload')
- name ||= 'files[]'
- label ||= t('.label')
- button_text ||= t('.button')

- input_id = "#{id}_file_input"

%div.container-fluid{ id: id, 'data-concerns' => 'uploadForm', 'data-concerns-options' => { action: action, type: type }.to_json }
  
  %div.row
    %div.col-md-4
      %div.row.btn.btn-default.fileinput-button
        %i.glyphicon.glyphicon-plus
        %span= button_text
        %input{ id: input_id, multiple: "multiple", name: name, type: "file"}
    %div.col-md-8
      = label
      
  %div.row
    %div.progress.progress-striped.active{"aria-valuemax" => "100", "aria-valuemin" => "0", role: "progressbar"}
      %span.progress-bar.progress-bar-default{style: "width:0%;"}

  %div.row.collapse{ data: { uploads: 'status' } }
    %table.table.table-striped
      %tbody.files
    %div.col-md-3.btn.btn-default{ data: { uploads: 'clean-status' }}
      = t('.clean_status')

= render 'concerns/uploads/templates'
