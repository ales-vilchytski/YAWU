!!!
%html
%head
  %title= t('title')
  = stylesheet_link_tag "application", charset: "UTF-8", media: "all"
  = yield :stylesheet
  = javascript_include_tag "application", charset: "UTF-8"
  = yield :javascript
  = csrf_meta_tags

%body
  %nav.navbar.navbar-default.navbar-static-top{ 'role' => "navigation" }
    .container-fluid
      .navbar-header
        %a.navbar-brand{href: root_url}= t('label')
        
      %div
        %ul.nav.navbar-nav
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", href: "#"}
              = t('application.xml.label')
              %b.caret
            %ul.dropdown-menu
              %li
                =link_to t('application.xml.format'), xml_format_path
              %li
                =link_to t('application.xml.escape'), xml_escape_path
              %li
                %a{href: "#"}= t('application.xml.json')
              %li
                %a{href: "#"}= t('application.xml.xslt')
              %li
                %a{href: "#"}= t('application.xml.xsd')
              %li.divider
              %li
                %a{href: "#"}= t('application.xml.generic')
          %li.dropdown
            %a.dropdown-toggle{"data-toggle" => "dropdown", href: "#"}
              = t('application.js.label')
              %b.caret
            %ul.dropdown-menu
              %li
                %a{href: "#"}= t('application.js.json_xml')
              %li
                %a{href: "#"}= t('application.js.xml_json')
              %li
                %a{href: "#"}= t('application.js.eval')
              %li.divider
              %li
                %a{href: "#"}= t('application.js.generic')         
            %li.dropdown
              %a.dropdown-toggle{"data-toggle" => "dropdown", href: "#"}
                Another stuff
                %b.caret
              %ul.dropdown-menu
                %li
                  %a{href: "#"} Tool 1
                %li
                  %a{href: "#"} Tool 2
                %li.divider
                %li
                  %a{href: "#"} Another tool

  = (content_for? :content) ? (yield :content) : (yield)
  